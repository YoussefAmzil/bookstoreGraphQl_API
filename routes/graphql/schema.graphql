"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Book {
    id: ID!
    title: String!
    author: String!
    img: String
    link: String
    description: String
    featured: Boolean
    category: Category! @belongsTo
}
type Category{
    id: ID!
    label: String!
    books: [Book] @hasMany
}


type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    books: [Book] @all
    book(id: ID @eq):Book @find
    categories: [Category] @all
    category(id:ID @eq):Category @find
    someComplexQuery(search:String!): [Book]
}
type Mutation {

    createCategory(
        label:String @rules(apply:["required","unique:categories,label"])
    ):Category @create

    updateCategory(
        id:ID @rules(apply:["required"])
        label:String @rules(apply:["required","unique:categories,label"])
    ):Category @update

    deleteCategory(
        id:ID! @rules(apply:["required"])
    ):Category @delete

    
    createBook(
        title:String! @rules(apply:["required"])
        author:String! @rules(apply:["required"])
        img:String 
        link:String 
        description:String
        featurd:Boolean
        category: Int! 
    ): Book @create

    updateBook(
        id:ID @rules(apply:["required"])
        title:String! @rules(apply:["required"])
        author:String! @rules(apply:["required"])
        img:String 
        link:String 
        description:String 
        featurd:Boolean
        category:Int!
    ):Book @update

    deleteBook(
        id:ID! @rules(apply:["required"])
    ):Book @delete
}